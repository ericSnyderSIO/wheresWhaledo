load('track_180611_1030.mat')
% load('track43_180327_084016.mat')

global brushing
loadParams('brushing.params')

twin = 20; % window size
spd = 60*60*24;
vwhale = 3; % maximum speed of source, m/s
c = 1488.4;
terr = .8e-3; % max error in TDOA (2x approx signal duration, seconds)
% driftErr = .002; % error due to uncertainty in drift
maxdTDOA = 2*vwhale/c + terr; % maximum change in TDOA per second

for wn = 1:numel(whale)

    % for wn = 2

    whale{wn}.TDOAcleaned = whale{wn}.TDOA;
    whale{wn}.dTDOA = zeros(size(whale{wn}.TDOA));
%     whale{wn}.TDOAsm = whale{wn}.TDOA;
    for ntdoa = 1:6

        Ind = find(whale{wn}.TDOA(:, ntdoa)>-10); % find points not flagged for removal
        if ~isempty(Ind)

            tdet = whale{wn}.TDet(Ind);
            tdoa = whale{wn}.TDOA(Ind, ntdoa);
            mtdoa = mean(tdoa); % mean TDOA value
            
            maxVarTDOA = maxdTDOA*(tdet(end)-tdet(1)).*spd; % maximum variation from mean tdoa allowed

            Irem = find(tdoa>=(mtdoa + maxVarTDOA) || tdoa<)

            whale{wn}.dTDOA(Ind, ntdoa) = dtdoa;

        end
    end
end
%%
figure(7)
for np = 1:6
    sp(np) = subplot(6,1,np)
    yyaxis left
    for wn = 1:numel(whale)

        Ic = find(whale{wn}.TDOAcleaned(:, np) > -10);
        scatter(whale{wn}.TDet(Ic), whale{wn}.TDOAcleaned(Ic, np), 40, brushing.params.colorMat(wn+1, :).*.5, 'x')
        hold on
        
%         Is = find(whale{wn}.TDOAsm(:, np) > -10);
%         scatter(whale{wn}.TDet(Is), whale{wn}.TDOAsm(Is, np), 44, brushing.params.colorMat(wn+1, :), 'x')

        Io = find(whale{wn}.TDOA(:, np) > -10);
        scatter(whale{wn}.TDet(Io), whale{wn}.TDOA(Io, np), 12, brushing.params.colorMat(wn+1, :), 'filled')
    end
    hold off

    yyaxis right
    for wn = 1:numel(whale)

        Ic = find(whale{wn}.TDOAcleaned(:, np) > -10);
        scatter(whale{wn}.TDet(Ic), whale{wn}.dTDOA(Ic, np), 12, '*')
        
    end
end

linkaxes(sp, 'x')
